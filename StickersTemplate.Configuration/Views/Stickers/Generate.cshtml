@model StickersTemplate.Configuration.Models.StickerViewModel

@{
    ViewBag.Title = "Generate";

    var selectList = new SelectList(
        new List<SelectListItem>
        {
            new SelectListItem {Text = "Comics 1", Value = "comics1"},
            new SelectListItem {Text = "Comics 2", Value = "comics2"},
            new SelectListItem {Text = "Anime", Value = "anime"},
            new SelectListItem {Text = "Pixar", Value = "pixar"},
            new SelectListItem {Text = "Amedeo Modigliani", Value = "modigliani"},
            new SelectListItem {Text = "Cartoon Shrek", Value = "shrek"},
            new SelectListItem {Text = "Mona Lisa", Value = "mona_lisa"},
            new SelectListItem {Text = "Scary Joker", Value = "joker"},
            new SelectListItem {Text = "The Witcher", Value = "witcher"},
        }, "Value", "Text");
}

<h3>Generate Avatar Stickers</h3>


@using (Html.BeginForm("Generate", "Stickers", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control", @id = "txtUserId" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ImageUri, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="imgFile" src="#" alt="Selected image" class="hidden" width="110"/>
                <input class="form-control" type="file" name="File" accept="image/gif, image/jpeg, image/png" onchange="readURL(this);" />
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "txtName" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Keywords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Keywords, new { htmlAttributes = new { @class = "form-control", @id = "txtKeywords" } })
                <div class="small text-muted">Enter relevant search terms, separated by commas or spaces.</div>
                @Html.ValidationMessageFor(model => model.Keywords, "", new { @class = "text-danger" })
            </div>
        </div>  

        <div class="form-group">
            @Html.LabelFor(model => model.ModelName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">         
                @Html.DropDownListFor(model => model.ModelName, selectList, "Select a model", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnSave" type="submit" value="Generate avatar" class="btn btn-default" disabled />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    function readURL(input) {
        if (input.files && input.files[0]) {
            var file = input.files[0];

            var reader = new FileReader();
            reader.onload = function (e) {
                $("#imgFile")
                    .removeClass("hidden")
                    .attr("src", e.target.result);
                $("#btnSave")
                    .removeAttr("disabled");
            };
            reader.readAsDataURL(file);

            $("#txtName").val(file.name.replace(/\.[^/.]+$/, ""));
            $("#txtKeywords").val(file.name.replace(/\.[^/.]+$/, ""));
        }
    }
</script>